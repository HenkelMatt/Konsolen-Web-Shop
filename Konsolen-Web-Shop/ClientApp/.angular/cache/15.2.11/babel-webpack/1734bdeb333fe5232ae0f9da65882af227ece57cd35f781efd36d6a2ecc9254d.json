{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CreateArtikelComponent = class CreateArtikelComponent {\n  constructor() {\n    this.blog = {\n      title: '',\n      content: ''\n    };\n    this.categories = [];\n    this.newCategory = '';\n    this.categoriesJson = '';\n    this.images = [];\n    this.contextMenu = {\n      visible: false,\n      x: 0,\n      y: 0,\n      imageIndex: -1\n    };\n  }\n  addCategory() {\n    if (this.newCategory.trim()) {\n      this.categories.push(this.newCategory.trim());\n      this.newCategory = '';\n      this.updateCategoriesJson();\n    }\n  }\n  removeCategory(index) {\n    this.categories.splice(index, 1);\n    this.updateCategoriesJson();\n  }\n  updateCategoriesJson() {\n    this.categoriesJson = JSON.stringify(this.categories);\n  }\n  onFilesSelected(event) {\n    const files = event.target.files;\n    if (files) {\n      Array.from(files).forEach(file => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.images.push({\n            file,\n            preview: reader.result\n          });\n        };\n        reader.readAsDataURL(file);\n      });\n    }\n  }\n  onDragStart(event, index) {\n    event.dataTransfer?.setData(\"imageIndex\", index.toString());\n  }\n  onDragOver(event) {\n    event.preventDefault();\n  }\n  onDrop(event, targetIndex) {\n    event.preventDefault();\n    const draggedIndex = Number(event.dataTransfer?.getData(\"imageIndex\"));\n    if (draggedIndex !== targetIndex) {\n      const draggedImage = this.images[draggedIndex];\n      this.images.splice(draggedIndex, 1);\n      this.images.splice(targetIndex, 0, draggedImage);\n    }\n  }\n  onRightClick(event, index) {\n    event.preventDefault();\n    this.contextMenu = {\n      visible: true,\n      x: event.clientX,\n      y: event.clientY,\n      imageIndex: index\n    };\n  }\n  removeImage() {\n    if (this.contextMenu.imageIndex > -1) {\n      this.images.splice(this.contextMenu.imageIndex, 1);\n      this.contextMenu.visible = false; // Kontextmenü schließen\n    }\n  }\n\n  submitBlogForm() {\n    console.log('Blog erstellt:', this.blog);\n  }\n};\nCreateArtikelComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './create-artikel.component.html',\n  styleUrls: ['./create-artikel.component.css']\n})], CreateArtikelComponent);\nexport { CreateArtikelComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAA5BC;IACL,SAAI,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACjC,eAAU,GAAa,EAAE;IACzB,gBAAW,GAAG,EAAE;IAChB,mBAAc,GAAG,EAAE;IACnB,WAAM,GAAsC,EAAE;IAC9C,gBAAW,GAAG;MAAEC,OAAO,EAAE,KAAK;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,UAAU,EAAE,CAAC;IAAC,CAAE;EAyE9D;EAvEEC,WAAW;IACT,IAAI,IAAI,CAACC,WAAW,CAACC,IAAI,EAAE,EAAE;MAC3B,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAACH,WAAW,CAACC,IAAI,EAAE,CAAC;MAC7C,IAAI,CAACD,WAAW,GAAG,EAAE;MACrB,IAAI,CAACI,oBAAoB,EAAE;;EAE/B;EAEAC,cAAc,CAACC,KAAa;IAC1B,IAAI,CAACJ,UAAU,CAACK,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAChC,IAAI,CAACF,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACI,cAAc,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACR,UAAU,CAAC;EACvD;EAEAS,eAAe,CAACC,KAAY;IAC1B,MAAMC,KAAK,GAAID,KAAK,CAACE,MAA2B,CAACD,KAAK;IACtD,IAAIA,KAAK,EAAE;MACTE,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACC,IAAI,IAAG;QAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;UACnB,IAAI,CAACC,MAAM,CAACnB,IAAI,CAAC;YACfe,IAAI;YACJK,OAAO,EAAEJ,MAAM,CAACK;WACjB,CAAC;QACJ,CAAC;QACDL,MAAM,CAACM,aAAa,CAACP,IAAI,CAAC;MAC5B,CAAC,CAAC;;EAEN;EAEAQ,WAAW,CAACd,KAAgB,EAAEN,KAAa;IACzCM,KAAK,CAACe,YAAY,EAAEC,OAAO,CAAC,YAAY,EAAEtB,KAAK,CAACuB,QAAQ,EAAE,CAAC;EAC7D;EAEAC,UAAU,CAAClB,KAAgB;IACzBA,KAAK,CAACmB,cAAc,EAAE;EACxB;EAEAC,MAAM,CAACpB,KAAgB,EAAEqB,WAAmB;IAC1CrB,KAAK,CAACmB,cAAc,EAAE;IACtB,MAAMG,YAAY,GAAGC,MAAM,CAACvB,KAAK,CAACe,YAAY,EAAES,OAAO,CAAC,YAAY,CAAC,CAAC;IACtE,IAAIF,YAAY,KAAKD,WAAW,EAAE;MAChC,MAAMI,YAAY,GAAG,IAAI,CAACf,MAAM,CAACY,YAAY,CAAC;MAC9C,IAAI,CAACZ,MAAM,CAACf,MAAM,CAAC2B,YAAY,EAAE,CAAC,CAAC;MACnC,IAAI,CAACZ,MAAM,CAACf,MAAM,CAAC0B,WAAW,EAAE,CAAC,EAAEI,YAAY,CAAC;;EAEpD;EAEAC,YAAY,CAAC1B,KAAiB,EAAEN,KAAa;IAC3CM,KAAK,CAACmB,cAAc,EAAE;IACtB,IAAI,CAACQ,WAAW,GAAG;MACjB5C,OAAO,EAAE,IAAI;MACbC,CAAC,EAAEgB,KAAK,CAAC4B,OAAO;MAChB3C,CAAC,EAAEe,KAAK,CAAC6B,OAAO;MAChB3C,UAAU,EAAEQ;KACb;EACH;EAEAoC,WAAW;IACT,IAAI,IAAI,CAACH,WAAW,CAACzC,UAAU,GAAG,CAAC,CAAC,EAAE;MACpC,IAAI,CAACwB,MAAM,CAACf,MAAM,CAAC,IAAI,CAACgC,WAAW,CAACzC,UAAU,EAAE,CAAC,CAAC;MAClD,IAAI,CAACyC,WAAW,CAAC5C,OAAO,GAAG,KAAK,CAAC,CAAC;;EAEtC;;EAEAgD,cAAc;IACZC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACC,IAAI,CAAC;EAC1C;CACD;AA/EYvD,sBAAsB,eALlCD,SAAS,CAAC;EACTyD,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW1D,sBAAsB,CA+ElC;SA/EYA,sBAAsB","names":["Component","CreateArtikelComponent","constructor","title","content","visible","x","y","imageIndex","addCategory","newCategory","trim","categories","push","updateCategoriesJson","removeCategory","index","splice","categoriesJson","JSON","stringify","onFilesSelected","event","files","target","Array","from","forEach","file","reader","FileReader","onload","images","preview","result","readAsDataURL","onDragStart","dataTransfer","setData","toString","onDragOver","preventDefault","onDrop","targetIndex","draggedIndex","Number","getData","draggedImage","onRightClick","contextMenu","clientX","clientY","removeImage","submitBlogForm","console","log","blog","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\henkelmatteo\\TF1 IHK TrainingProjekt\\03 Konsolen Shop Neu\\Konsolen-Web-Shop\\Konsolen-Web-Shop\\ClientApp\\src\\app\\components\\create-artikel\\create-artikel.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './create-artikel.component.html',\r\n  styleUrls: ['./create-artikel.component.css']\r\n})\r\nexport class CreateArtikelComponent {\r\n  blog = { title: '', content: '' };\r\n  categories: string[] = [];\r\n  newCategory = '';\r\n  categoriesJson = '';\r\n  images: { file: File, preview: string }[] = [];\r\n  contextMenu = { visible: false, x: 0, y: 0, imageIndex: -1 };\r\n\r\n  addCategory() {\r\n    if (this.newCategory.trim()) {\r\n      this.categories.push(this.newCategory.trim());\r\n      this.newCategory = '';\r\n      this.updateCategoriesJson();\r\n    }\r\n  }\r\n\r\n  removeCategory(index: number) {\r\n    this.categories.splice(index, 1);\r\n    this.updateCategoriesJson();\r\n  }\r\n\r\n  updateCategoriesJson() {\r\n    this.categoriesJson = JSON.stringify(this.categories);\r\n  }\r\n\r\n  onFilesSelected(event: Event) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    if (files) {\r\n      Array.from(files).forEach(file => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          this.images.push({\r\n            file,\r\n            preview: reader.result as string\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n  }\r\n\r\n  onDragStart(event: DragEvent, index: number) {\r\n    event.dataTransfer?.setData(\"imageIndex\", index.toString());\r\n  }\r\n\r\n  onDragOver(event: DragEvent) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(event: DragEvent, targetIndex: number) {\r\n    event.preventDefault();\r\n    const draggedIndex = Number(event.dataTransfer?.getData(\"imageIndex\"));\r\n    if (draggedIndex !== targetIndex) {\r\n      const draggedImage = this.images[draggedIndex];\r\n      this.images.splice(draggedIndex, 1);\r\n      this.images.splice(targetIndex, 0, draggedImage);\r\n    }\r\n  }\r\n\r\n  onRightClick(event: MouseEvent, index: number) {\r\n    event.preventDefault();\r\n    this.contextMenu = {\r\n      visible: true,\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n      imageIndex: index\r\n    };\r\n  }\r\n\r\n  removeImage() {\r\n    if (this.contextMenu.imageIndex > -1) {\r\n      this.images.splice(this.contextMenu.imageIndex, 1);\r\n      this.contextMenu.visible = false; // Kontextmenü schließen\r\n    }\r\n  }\r\n\r\n  submitBlogForm() {\r\n    console.log('Blog erstellt:', this.blog);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}