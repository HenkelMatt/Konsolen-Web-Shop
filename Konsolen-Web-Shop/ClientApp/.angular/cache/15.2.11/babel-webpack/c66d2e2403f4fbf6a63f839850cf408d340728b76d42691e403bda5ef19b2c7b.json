{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, LoginComponent_div_7_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n  }\n}\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.benutzername = '';\n    this.passwort = '';\n    this.isPasswordVisible = false; // Zustand für Passwortsichtbarkeit\n  }\n  // Funktion zum Umschalten der Passwortsichtbarkeit\n  togglePasswordVisibility() {\n    this.isPasswordVisible = !this.isPasswordVisible;\n  }\n  // Formular-Submit-Funktion\n  onSubmit() {\n    const loginData = {\n      benutzername: this.benutzername,\n      passwort: this.passwort\n    };\n    // API-Aufruf für den Login\n    this.http.post('https://localhost:5001/api/auth/login', loginData).subscribe(response => {\n      // Erfolg - weiterleiten zum Blog\n      console.log('Login successful', response);\n      this.router.navigate(['/blog-list']);\n    }, error => {\n      // Fehlerbehandlung\n      console.error('Login failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 11,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/register\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"button\", 7);\n        i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 1, 0, \"span\", 8);\n        i0.ɵɵtext(16, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 9);\n        i0.ɵɵtext(18, \"Register\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.username.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i2.RouterLink],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAMMA,2BAAwC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IADpEA,+BAAqE;IACnEA,sEAAkE;IACpEA,iBAAM;;;;IADEA,eAAgC;IAAhCA,wDAAgC;;;;;IAOtCA,2BAAwC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IADpEA,+BAAqE;IACnEA,uEAAkE;IACpEA,iBAAM;;;;IADEA,eAAgC;IAAhCA,wDAAgC;;;;;IAKtCA,2BAA2E;;;;;;;;ACTjF,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAJpD,iBAAY,GAAW,EAAE;IACzB,aAAQ,GAAW,EAAE;IACrB,sBAAiB,GAAY,KAAK,CAAC,CAAC;EAE2B;EAE/D;EACAC,wBAAwB;IACtB,IAAI,CAACC,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB;EAClD;EAEA;EACAC,QAAQ;IACN,MAAMC,SAAS,GAAG;MAChBC,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED;IACA,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,uCAAuC,EAAEH,SAAS,CAAC,CAACI,SAAS,CAC9EC,QAAQ,IAAI;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;MACzC,IAAI,CAACT,MAAM,CAACY,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAI;MACR;MACAH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CACF;EACH;EAAC;qBA/BUhB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAiB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDT3BtB,0BAAI;QAAAA,qBAAK;QAAAA,iBAAK;QACdA,+BAAsD;QAAxBA;UAAA,OAAYuB,cAAU;QAAA,EAAC;QACnDvB,8BAAwB;QACAA,wBAAQ;QAAAA,iBAAQ;QACtCA,2BAAkI;QAClIA,+DAEM;QACRA,iBAAM;QACNA,8BAAwB;QACAA,yBAAQ;QAAAA,iBAAQ;QACtCA,4BAAsI;QACtIA,iEAEM;QACRA,iBAAM;QACNA,+BAAwB;QAEpBA,mEAA2E;QAC3EA,wBACF;QAAAA,iBAAS;QACTA,6BAA+C;QAAAA,yBAAQ;QAAAA,iBAAI;;;QApBzDA,eAAuB;QAAvBA,yCAAuB;QAG0CA,eAA4D;QAA5DA,4FAA4D;QACzHA,eAAoC;QAApCA,6DAAoC;QAM6BA,eAA4D;QAA5DA,4FAA4D;QAC7HA,eAAoC;QAApCA,6DAAoC;QAKlCA,eAAoB;QAApBA,sCAAoB;QACnBA,eAAa;QAAbA,kCAAa","names":["i0","LoginComponent","constructor","http","router","togglePasswordVisibility","isPasswordVisible","onSubmit","loginData","benutzername","passwort","post","subscribe","response","console","log","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\henkelmatteo\\TF1 IHK TrainingProjekt\\Konsolen-Web-Shop\\Konsolen-Web-Shop\\ClientApp\\src\\app\\components\\Login\\login.component.html","C:\\Users\\henkelmatteo\\TF1 IHK TrainingProjekt\\Konsolen-Web-Shop\\Konsolen-Web-Shop\\ClientApp\\src\\app\\components\\Login\\Login.component.ts"],"sourcesContent":["<h2>Login</h2>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Username</label>\r\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n      Login\r\n    </button>\r\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  benutzername: string = '';\r\n  passwort: string = '';\r\n  isPasswordVisible: boolean = false; // Zustand für Passwortsichtbarkeit\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  // Funktion zum Umschalten der Passwortsichtbarkeit\r\n  togglePasswordVisibility(): void {\r\n    this.isPasswordVisible = !this.isPasswordVisible;\r\n  }\r\n\r\n  // Formular-Submit-Funktion\r\n  onSubmit(): void {\r\n    const loginData = {\r\n      benutzername: this.benutzername,\r\n      passwort: this.passwort,\r\n    };\r\n\r\n    // API-Aufruf für den Login\r\n    this.http.post<any>('https://localhost:5001/api/auth/login', loginData).subscribe(\r\n      (response) => {\r\n        // Erfolg - weiterleiten zum Blog\r\n        console.log('Login successful', response);\r\n        this.router.navigate(['/blog-list']);\r\n      },\r\n      (error) => {\r\n        // Fehlerbehandlung\r\n        console.error('Login failed', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}