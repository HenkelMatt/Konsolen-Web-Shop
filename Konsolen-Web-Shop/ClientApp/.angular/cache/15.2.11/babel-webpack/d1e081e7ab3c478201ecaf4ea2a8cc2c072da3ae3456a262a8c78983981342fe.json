{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CreateBlogComponent = class CreateBlogComponent {\n  constructor() {\n    this.blog = {\n      title: '',\n      content: ''\n    };\n    this.categories = [];\n    this.newCategory = '';\n    this.categoriesJson = '';\n    this.images = [];\n    this.fileName = '';\n  }\n  addCategory() {\n    if (this.newCategory.trim()) {\n      this.categories.push(this.newCategory.trim());\n      this.newCategory = '';\n      this.updateCategoriesJson();\n    }\n  }\n  removeCategory(index) {\n    this.categories.splice(index, 1);\n    this.updateCategoriesJson();\n  }\n  updateCategoriesJson() {\n    this.categoriesJson = JSON.stringify(this.categories);\n  }\n  // Mehrere Dateien auswählen\n  onFilesSelected(event) {\n    const files = event.target.files;\n    if (files) {\n      Array.from(files).forEach(file => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.images.push({\n            file,\n            preview: reader.result,\n            showDelete: false\n          });\n        };\n        reader.readAsDataURL(file);\n      });\n    }\n  }\n  // Rechtsklick-Handler für das Löschen\n  onRightClick(event, index) {\n    event.preventDefault();\n    this.images[index].showDelete = !this.images[index].showDelete;\n  }\n  removeImage(index) {\n    this.images.splice(index, 1);\n  }\n  submitBlogForm() {\n    // Hier implementierst du die Logik zum Senden des Formulars an den Server\n    console.log('Blog erstellt:', this.blog);\n  }\n};\nCreateBlogComponent = __decorate([Component({\n  selector: 'app-create-blog',\n  templateUrl: './create-blog.component.html',\n  styleUrls: ['./create-blog.component.css']\n})], CreateBlogComponent);\nexport { CreateBlogComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAAzBC;IACL,SAAI,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACjC,eAAU,GAAa,EAAE;IACzB,gBAAW,GAAG,EAAE;IAChB,mBAAc,GAAG,EAAE;IACnB,WAAM,GAA2D,EAAE;IACnE,aAAQ,GAAG,EAAE;EAmDf;EAjDEC,WAAW;IACT,IAAI,IAAI,CAACC,WAAW,CAACC,IAAI,EAAE,EAAE;MAC3B,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAACH,WAAW,CAACC,IAAI,EAAE,CAAC;MAC7C,IAAI,CAACD,WAAW,GAAG,EAAE;MACrB,IAAI,CAACI,oBAAoB,EAAE;;EAE/B;EAEAC,cAAc,CAACC,KAAa;IAC1B,IAAI,CAACJ,UAAU,CAACK,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAChC,IAAI,CAACF,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACI,cAAc,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACR,UAAU,CAAC;EACvD;EAEA;EACAS,eAAe,CAACC,KAAY;IAC1B,MAAMC,KAAK,GAAID,KAAK,CAACE,MAA2B,CAACD,KAAK;IACtD,IAAIA,KAAK,EAAE;MACTE,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACC,IAAI,IAAG;QAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;UACnB,IAAI,CAACC,MAAM,CAACnB,IAAI,CAAC;YACfe,IAAI;YACJK,OAAO,EAAEJ,MAAM,CAACK,MAAgB;YAChCC,UAAU,EAAE;WACb,CAAC;QACJ,CAAC;QACDN,MAAM,CAACO,aAAa,CAACR,IAAI,CAAC;MAC5B,CAAC,CAAC;;EAEN;EAEA;EACAS,YAAY,CAACf,KAAiB,EAAEN,KAAa;IAC3CM,KAAK,CAACgB,cAAc,EAAE;IACtB,IAAI,CAACN,MAAM,CAAChB,KAAK,CAAC,CAACmB,UAAU,GAAG,CAAC,IAAI,CAACH,MAAM,CAAChB,KAAK,CAAC,CAACmB,UAAU;EAChE;EAEAI,WAAW,CAACvB,KAAa;IACvB,IAAI,CAACgB,MAAM,CAACf,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;EAC9B;EAEAwB,cAAc;IACZ;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACC,IAAI,CAAC;EAC1C;CACD;AAzDYtC,mBAAmB,eAL/BD,SAAS,CAAC;EACTwC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWzC,mBAAmB,CAyD/B;SAzDYA,mBAAmB","names":["Component","CreateBlogComponent","constructor","title","content","addCategory","newCategory","trim","categories","push","updateCategoriesJson","removeCategory","index","splice","categoriesJson","JSON","stringify","onFilesSelected","event","files","target","Array","from","forEach","file","reader","FileReader","onload","images","preview","result","showDelete","readAsDataURL","onRightClick","preventDefault","removeImage","submitBlogForm","console","log","blog","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\henkelmatteo\\TF1 IHK TrainingProjekt\\03 Konsolen Shop Neu\\Konsolen-Web-Shop\\Konsolen-Web-Shop\\ClientApp\\src\\app\\components\\create-artikel\\create-artikel.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-blog',\r\n  templateUrl: './create-blog.component.html',\r\n  styleUrls: ['./create-blog.component.css']\r\n})\r\nexport class CreateBlogComponent {\r\n  blog = { title: '', content: '' };\r\n  categories: string[] = [];\r\n  newCategory = '';\r\n  categoriesJson = '';\r\n  images: { file: File, preview: string, showDelete: boolean }[] = [];\r\n  fileName = '';\r\n\r\n  addCategory() {\r\n    if (this.newCategory.trim()) {\r\n      this.categories.push(this.newCategory.trim());\r\n      this.newCategory = '';\r\n      this.updateCategoriesJson();\r\n    }\r\n  }\r\n\r\n  removeCategory(index: number) {\r\n    this.categories.splice(index, 1);\r\n    this.updateCategoriesJson();\r\n  }\r\n\r\n  updateCategoriesJson() {\r\n    this.categoriesJson = JSON.stringify(this.categories);\r\n  }\r\n\r\n  // Mehrere Dateien auswählen\r\n  onFilesSelected(event: Event) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    if (files) {\r\n      Array.from(files).forEach(file => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          this.images.push({\r\n            file,\r\n            preview: reader.result as string,\r\n            showDelete: false\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Rechtsklick-Handler für das Löschen\r\n  onRightClick(event: MouseEvent, index: number) {\r\n    event.preventDefault();\r\n    this.images[index].showDelete = !this.images[index].showDelete;\r\n  }\r\n\r\n  removeImage(index: number) {\r\n    this.images.splice(index, 1);\r\n  }\r\n\r\n  submitBlogForm() {\r\n    // Hier implementierst du die Logik zum Senden des Formulars an den Server\r\n    console.log('Blog erstellt:', this.blog);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}